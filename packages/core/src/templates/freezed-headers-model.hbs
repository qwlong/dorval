import 'package:freezed_annotation/freezed_annotation.dart';

part '{{fileName}}.f.freezed.dart';
part '{{fileName}}.f.g.dart';

{{#if description}}
{{{dartDoc description}}}
{{/if}}
@freezed
abstract class {{className}} with _${{className}} {
  const factory {{className}}({
    {{#each properties}}
    {{#if description}}
{{{dartDoc description indent=4}}}
    {{/if}}
    {{#if jsonKey}}
    @JsonKey(name: '{{jsonKey}}') 
    {{/if}}
    {{! Headers: fields with default or required don't get nullable }}
    {{#if defaultValue}}@Default({{{defaultValue}}}) {{{type}}} {{{name}}},{{else}}{{#if required}}required {{{type}}} {{{name}}},{{else}}{{{type}}}? {{{name}}},{{/if}}{{/if}}
{{#unless @last}}

{{/unless}}
    {{/each}}
  }) = _{{className}};

  factory {{className}}.fromJson(Map<String, dynamic> json) =>
      _${{className}}FromJson(json);
}